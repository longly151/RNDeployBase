name: Pong Staging

on:
  repository_dispatch:
    types: [MoneyTrackerAI_ping_staging, ChillWheel_ping_staging, RNBase_ping_staging, VLRNBase_ping_staging, Motivated_ping_staging, MinhChauViet_ping_staging, NauLinen_ping_staging, OffWeGo_ping_staging, MoonStep_ping_staging]
jobs:
  ping-pong:
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          printf '%s\n' 'Event "${{ github.event.action }}" received from "${{ github.event.client_payload.repository }}"'
  distribute-android:
    runs-on: ubuntu-latest
    steps:
      # Node
      - uses: actions/checkout@v4
        with:
          repository: '${{ github.event.client_payload.repository }}'
          token: '${{ secrets[github.event.client_payload.ping_access_token] }}'
          ref: 'staging'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: printf '%s\n' '::set-output name=dir::$(yarn cache dir)'
      - name: YARN Cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: YARN Install
        run: |
          printf '%s\n' '${{ secrets[github.event.client_payload.env] }}' > .env
          printf '%s\n' '${{ secrets[github.event.client_payload.env] }}' > .env.staging
          sed -i -e 's/ && cd ios && pod install && cd ..//g' package.json
          yarn install

      # Set ENV
      # - name: Set ENV
      #   run: |
      #     printf '%s\n' '::set-env name=AWS_ACCESS_KEY_ID_SECRET_NAME::AWS_ACCESS_KEY_ID_${GITHUB_REF_SLUG}'
      #     printf '%s\n' '::set-env name=AWS_SECRET_ACCESS_KEY_SECRET_NAME::AWS_SECRET_ACCESS_KEY_${GITHUB_REF_SLUG}'

      # Build
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install firebase tool
        run: |
          yarn global add firebase-tools
      # - name: Bundle Cache
      #   uses: actions/cache@v4
      #   with:
      #     path: android/vendor/bundle
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-
      # - name: Setup fastlane
      #   run: |
      #     cd android && bundle install
      - name: Distribute to firebase
        run: yarn ci-android:stag
      - name: Commit version
        run: |
          cd android
          fastlane commit_version

  distribute-ios:
    runs-on: macos-latest
    steps:
      # Node
      - uses: actions/checkout@v4
        with:
          repository: '${{ github.event.client_payload.repository }}'
          token: '${{ secrets[github.event.client_payload.ping_access_token] }}'
          ref: 'staging'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: printf '%s\n' '::set-output name=dir::$(yarn cache dir)'
      - name: YARN Cache
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Pods Cache
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: YARN Install
        run: |
          printf '%s\n' '${{ secrets[github.event.client_payload.env] }}' > .env
          printf '%s\n' '${{ secrets[github.event.client_payload.env] }}' > .env.staging
          yarn install

      - name: Distribute to firebase
        run: yarn ci-ios:stag
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            ./ios/test_output/*test_result/*Test/Diagnostics/**/**/Session*.log
      - name: Commit version
        run: |
          cd ios
          fastlane commit_version
